---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml


  tasks:
    - name: Check if /etc/docker exists
      stat:
        path: /etc/docker
      register: stat_result

    - name: "echo if directory already exists"
      debug:
        msg: "the docker directory already exists"
      when: stat_result.stat.exists

    - name: Create /etc/docker directory, if it does not exist already
      file:
        path: /etc/docker
        state: directory
      when: not stat_result.stat.exists
           
    - name: Create a docker configuration file as template (/etc/docker/daemon.json)
      command: touch /etc/docker/daemon.json
      
      
    - name: Generate the configuration file using variable
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "data-root": {{ data_root }}
          }

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'gnupg-agent']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present


    - name: Update apt and install docker-ce, docker-ce-cli and containerd.io
      command: sudo apt-get update

    - name: Update apt and install docker-ce, docker-ce-cli and containerd.io
      command: sudo apt-get install docker-ce=5:19.03.1~3-0~ubuntu-bionic docker-ce-cli=5:19.03.1~3-0~ubuntu-bionic
    
    - name: Set auto-start for docker daemon
      command: "sudo systemctl enable {{ item }}"
      with_items:
      - docker.service
      - containerd.service
    
    - user:
        name: "{{ the_user }}"
        append: yes
        groups:
        - docker
      when: "the_user != 'root'"



